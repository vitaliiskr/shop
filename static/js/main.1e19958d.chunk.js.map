{"version":3,"sources":["Button/Button.jsx","ProductList/ProductList.jsx","BagProduct/BagProduct.jsx","Bag/Bag.jsx","LocalStorage.js","products.js","App.js","reportWebVitals.js","index.js"],"names":["Button","onClick","type","className","ProductList","products","addGoods","map","product","name","src","img","alt","label","price","id","BagProduct","goodsInBag","removeProduct","reduceQuantity","increaseQuantity","good","quantity","Bag","clearBag","length","reduce","acum","useLocalStorage","key","initialValue","useState","item","window","localStorage","getItem","JSON","parse","error","console","log","storedValue","setStoredValue","value","valueToStore","Function","setItem","stringify","App","setGoodsInBag","to","path","find","prevGoodsInBag","filter","some","prevGoodsinBag","reportWebVitals","onPerfEntry","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1e19958d.chunk.js","sourcesContent":["/* eslint-disable import/prefer-default-export */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './Button.scss';\n\nexport const Button = ({ onClick }) => (\n  <button\n    type=\"button\"\n    className=\"button product__button\"\n    onClick={onClick}\n  >\n    Add to Bag\n  </button>\n);\n\nButton.propTypes = {\n  onClick: PropTypes.func.isRequired,\n};\n","/* eslint-disable import/prefer-default-export */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './ProductList.scss';\nimport { Button } from '../Button/Button';\n\nexport const ProductList = ({ products, addGoods }) => (\n  <ul className=\"product-list\">\n    {\n      products.map(\n        (product) => (\n          <li key={product.id}>\n            <div className=\"product\">\n              <div className=\"product__name\">{product.name}</div>\n              <img src={product.img} alt=\"Product\" className=\"product__img\" />\n              <div className=\"product__description\">{product.label}</div>\n              <div className=\"product__price\">\n                {`Price: ${product.price} $`}\n              </div>\n              <Button onClick={() => addGoods(product)} />\n            </div>\n          </li>\n        ),\n      )\n    }\n  </ul>\n);\n\nProductList.propTypes = {\n  addGoods: PropTypes.func.isRequired,\n  products: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      id: PropTypes.number.isRequired,\n      price: PropTypes.number.isRequired,\n      label: PropTypes.string.isRequired,\n    }.isRequired),\n  ).isRequired,\n};\n","/* eslint-disable import/prefer-default-export */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './BagProduct.scss';\n\nexport const BagProduct = ({\n  goodsInBag,\n  removeProduct,\n  reduceQuantity,\n  increaseQuantity,\n}) => (\n  <>\n    { goodsInBag.map((good) => (\n      <div className=\"bag-product\" key={good.id}>\n        <div className=\"bag-product__name\">\n          {good.name}\n        </div>\n        <div className=\"bag-product__quantity\">\n          {`Quantity: ${good.quantity}`}\n        </div>\n        <div className=\"bag-product__price\">\n          {`Price: ${good.price} $`}\n        </div>\n        <div className=\"bag-product__total-price\">\n          {`Total: ${good.price * good.quantity} $`}\n        </div>\n        <div className=\"bag-product__control\">\n          <button\n            type=\"button\"\n            className=\"bag-product__change-quantity\"\n            onClick={() => reduceQuantity(good)}\n          >\n            -\n          </button>\n          <img\n            alt={good.name}\n            src={good.img}\n            className=\"bag-product__img\"\n          />\n          <button\n            type=\"button\"\n            className=\"bag-product__change-quantity\"\n            onClick={() => increaseQuantity(good)}\n          >\n            +\n          </button>\n        </div>\n        <button type=\"button\" onClick={() => removeProduct(good)}>\n          X\n        </button>\n      </div>\n    ))}\n  </>\n);\n\nBagProduct.propTypes = {\n  goodsInBag: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      price: PropTypes.number.isRequired,\n    }),\n  ).isRequired,\n  removeProduct: PropTypes.func.isRequired,\n  reduceQuantity: PropTypes.func.isRequired,\n  increaseQuantity: PropTypes.func.isRequired,\n};\n","/* eslint-disable import/prefer-default-export */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './Bag.scss';\n\nimport { BagProduct } from '../BagProduct/BagProduct';\n\nexport const Bag = ({\n  goodsInBag,\n  removeProduct,\n  reduceQuantity,\n  increaseQuantity,\n  clearBag,\n}) => (\n  <>\n    {\n      goodsInBag.length < 1\n        ? (<h3>Bag is empty</h3>)\n        : (\n          <div className=\"bag\">\n            <BagProduct\n              goodsInBag={goodsInBag}\n              removeProduct={removeProduct}\n              reduceQuantity={reduceQuantity}\n              increaseQuantity={increaseQuantity}\n              clearBag={clearBag}\n            />\n            <div>\n              {'Order All: '}\n              { goodsInBag.reduce((acum, good) => (good.price * good.quantity) + acum, 0) }\n              {' $.'}\n            </div>\n            <button\n              className=\"bag__button\"\n              type=\"button\"\n              onClick={clearBag}\n            >\n              Clear Bag\n            </button>\n          </div>\n        )\n    }\n  </>\n);\n\nBag.propTypes = {\n  goodsInBag: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      price: PropTypes.number.isRequired,\n    }),\n  ).isRequired,\n  removeProduct: PropTypes.func.isRequired,\n  reduceQuantity: PropTypes.func.isRequired,\n  increaseQuantity: PropTypes.func.isRequired,\n  clearBag: PropTypes.func.isRequired,\n};\n","import { useState } from 'react';\n\nfunction useLocalStorage(key, initialValue) {\n  const [storedValue, setStoredValue] = useState(() => {\n    try {\n      const item = window.localStorage.getItem(key);\n      return item ? JSON.parse(item) : initialValue;\n    } catch (error) {\n      console.log(error);\n      return initialValue;\n    }\n  });\n  const setValue = (value) => {\n    try {\n      const valueToStore = value instanceof Function ? value(storedValue) : value;\n      setStoredValue(valueToStore);\n      window.localStorage.setItem(key, JSON.stringify(valueToStore));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  return [storedValue, setValue];\n}\n\nexport default useLocalStorage;\n","/* eslint-disable quotes */\nconst products = [\n  {\n    id: 1,\n    name: \"article 1\",\n    label: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit,sed do eiusmod tempor incididunt utlabore et dolore magna aliqua.\",\n    price: 25,\n    img: \"https://github.com/vitaliiskr/shop/blob/master/src/images/product.jpg?raw=true\",\n  },\n  {\n    id: 2,\n    name: \"article 2\",\n    label: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit,sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\",\n    price: 35,\n    img: \"https://github.com/vitaliiskr/shop/blob/master/src/images/product-1.jpg?raw=true\",\n  },\n  {\n    id: 3,\n    name: \"article 3\",\n    label: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit,sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\",\n    price: 45,\n    img: \"https://github.com/vitaliiskr/shop/blob/master/src/images/product-2.jpg?raw=true\",\n  },\n];\n\nexport default products;\n","/* eslint-disable react/jsx-filename-extension */\nimport React from 'react';\nimport './App.css';\nimport './Navigation.scss';\nimport { Link, Route, Switch } from 'react-router-dom';\nimport { ProductList } from './ProductList/ProductList';\nimport { Bag } from './Bag/Bag';\nimport useLocalStorage from './LocalStorage';\n\nimport products from './products';\n\nfunction App() {\n  const [goodsInBag, setGoodsInBag] = useLocalStorage('goodsInBag', []);\n\n  const addGoods = (good) => {\n    if (!goodsInBag.some((product) => product.id === good.id)) {\n      const product = { ...good, quantity: 1 };\n      setGoodsInBag((prevGoodsinBag) => [...prevGoodsinBag, product]);\n    } else {\n      const addedProduct = goodsInBag.find((product) => product.id === good.id);\n      addedProduct.quantity += 1;\n      setGoodsInBag((prevGoodsInBag) => [...prevGoodsInBag]);\n    }\n  };\n\n  const removeProduct = (product) => {\n    // eslint-disable-next-line max-len\n    setGoodsInBag((prevGoodsInBag) => prevGoodsInBag.filter((good) => good.id !== product.id));\n  };\n\n  const reduceQuantity = (product) => {\n    if (product.quantity > 1) {\n      const selectedProduct = goodsInBag.find((good) => product.id === good.id);\n      selectedProduct.quantity -= 1;\n      setGoodsInBag((prevGoodsInBag) => [...prevGoodsInBag]);\n    } else {\n      setGoodsInBag((prevGoodsInBag) => prevGoodsInBag.filter((good) => good.id !== product.id));\n    }\n  };\n\n  const increaseQuantity = (product) => {\n    const selectedProduct = goodsInBag.find((good) => product.id === good.id);\n    selectedProduct.quantity += 1;\n    setGoodsInBag((prevGoodsInBag) => [...prevGoodsInBag]);\n  };\n\n  const clear = () => {\n    setGoodsInBag([]);\n  };\n\n  return (\n    <div className=\"App\">\n      <Link className=\"nav-link\" to=\"/home\">Products</Link>\n      <Link className=\"nav-link nav-link-bag\" to=\"/bag\">Bag</Link>\n      <Switch>\n        <Route path=\"/bag\">\n          <Bag\n            reduceQuantity={reduceQuantity}\n            goodsInBag={goodsInBag}\n            removeProduct={removeProduct}\n            increaseQuantity={increaseQuantity}\n            clearBag={clear}\n          />\n        </Route>\n        <Route path=\"/\">\n          <ProductList products={products} addGoods={addGoods} />\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({\n      getCLS, getFID, getFCP, getLCP, getTTFB,\n    }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","/* eslint-disable react/jsx-filename-extension */\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <HashRouter>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </HashRouter>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}